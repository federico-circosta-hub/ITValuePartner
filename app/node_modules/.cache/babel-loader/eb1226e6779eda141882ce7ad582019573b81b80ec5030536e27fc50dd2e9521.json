{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { scaleBand, scalePoint, scaleTime } from '@mui/x-charts-vendor/d3-scale';\nimport { isBandScaleConfig, isPointScaleConfig } from '../../models/axis';\nimport { getColorScale, getOrdinalColorScale } from '../../internals/colorScale';\nimport { getTickNumber } from '../../hooks/useTicks';\nimport { getScale } from '../../internals/getScale';\nimport { zoomScaleRange } from './zoom';\nimport { getAxisExtremum } from './getAxisExtremum';\nconst getRange = (drawingArea, axisDirection, isReverse) => {\n  const range = axisDirection === 'x' ? [drawingArea.left, drawingArea.left + drawingArea.width] : [drawingArea.top + drawingArea.height, drawingArea.top];\n  return isReverse ? range.reverse() : range;\n};\nconst isDateData = data => data?.[0] instanceof Date;\nfunction createDateFormatter(axis, range) {\n  const timeScale = scaleTime(axis.data, range);\n  return (v, {\n    location\n  }) => location === 'tick' ? timeScale.tickFormat(axis.tickNumber)(v) : `${v.toLocaleString()}`;\n}\nconst DEFAULT_CATEGORY_GAP_RATIO = 0.2;\nconst DEFAULT_BAR_GAP_RATIO = 0.1;\nexport function computeValue({\n  drawingArea,\n  formattedSeries,\n  axis: allAxis,\n  extremumGetters,\n  axisDirection,\n  zoomData,\n  zoomOptions,\n  getFilters\n}) {\n  const completeAxis = {};\n  allAxis.forEach((eachAxis, axisIndex) => {\n    const axis = eachAxis;\n    const isDefaultAxis = axisIndex === 0;\n    const zoomOption = zoomOptions?.[axis.id];\n    const zoom = zoomData?.find(({\n      axisId\n    }) => axisId === axis.id);\n    const zoomRange = zoom ? [zoom.start, zoom.end] : [0, 100];\n    const range = getRange(drawingArea, axisDirection, axis.reverse);\n    const [minData, maxData] = getAxisExtremum(axis, extremumGetters, isDefaultAxis, formattedSeries, zoom === undefined && !zoomOption ? getFilters : undefined // Do not apply filtering if zoom is already defined.\n    );\n    const data = axis.data ?? [];\n    if (isBandScaleConfig(axis)) {\n      const categoryGapRatio = axis.categoryGapRatio ?? DEFAULT_CATEGORY_GAP_RATIO;\n      const barGapRatio = axis.barGapRatio ?? DEFAULT_BAR_GAP_RATIO;\n      // Reverse range because ordinal scales are presented from top to bottom on y-axis\n      const scaleRange = axisDirection === 'x' ? range : [range[1], range[0]];\n      const zoomedRange = zoomScaleRange(scaleRange, zoomRange);\n      completeAxis[axis.id] = _extends({\n        categoryGapRatio,\n        barGapRatio\n      }, axis, {\n        data,\n        scale: scaleBand(axis.data, zoomedRange).paddingInner(categoryGapRatio).paddingOuter(categoryGapRatio / 2),\n        tickNumber: axis.data.length,\n        colorScale: axis.colorMap && (axis.colorMap.type === 'ordinal' ? getOrdinalColorScale(_extends({\n          values: axis.data\n        }, axis.colorMap)) : getColorScale(axis.colorMap))\n      });\n      if (isDateData(axis.data)) {\n        const dateFormatter = createDateFormatter(axis, scaleRange);\n        completeAxis[axis.id].valueFormatter = axis.valueFormatter ?? dateFormatter;\n      }\n    }\n    if (isPointScaleConfig(axis)) {\n      const scaleRange = axisDirection === 'x' ? range : [...range].reverse();\n      const zoomedRange = zoomScaleRange(scaleRange, zoomRange);\n      completeAxis[axis.id] = _extends({}, axis, {\n        data,\n        scale: scalePoint(axis.data, zoomedRange),\n        tickNumber: axis.data.length,\n        colorScale: axis.colorMap && (axis.colorMap.type === 'ordinal' ? getOrdinalColorScale(_extends({\n          values: axis.data\n        }, axis.colorMap)) : getColorScale(axis.colorMap))\n      });\n      if (isDateData(axis.data)) {\n        const dateFormatter = createDateFormatter(axis, scaleRange);\n        completeAxis[axis.id].valueFormatter = axis.valueFormatter ?? dateFormatter;\n      }\n    }\n    if (axis.scaleType === 'band' || axis.scaleType === 'point') {\n      // Could be merged with the two previous \"if conditions\" but then TS does not get that `axis.scaleType` can't be `band` or `point`.\n      return;\n    }\n    const scaleType = axis.scaleType ?? 'linear';\n    const axisExtremums = [axis.min ?? minData, axis.max ?? maxData];\n    const rawTickNumber = getTickNumber(_extends({}, axis, {\n      range,\n      domain: axisExtremums\n    }));\n    const tickNumber = rawTickNumber / ((zoomRange[1] - zoomRange[0]) / 100);\n    const zoomedRange = zoomScaleRange(range, zoomRange);\n\n    // TODO: move nice to prop? Disable when there is zoom?\n    const scale = getScale(scaleType, axisExtremums, zoomedRange).nice(rawTickNumber);\n    const [minDomain, maxDomain] = scale.domain();\n    const domain = [axis.min ?? minDomain, axis.max ?? maxDomain];\n    completeAxis[axis.id] = _extends({}, axis, {\n      data,\n      scaleType: scaleType,\n      scale: scale.domain(domain),\n      tickNumber,\n      colorScale: axis.colorMap && getColorScale(axis.colorMap)\n    });\n  });\n  return {\n    axis: completeAxis,\n    axisIds: allAxis.map(({\n      id\n    }) => id)\n  };\n}","map":{"version":3,"names":["_extends","scaleBand","scalePoint","scaleTime","isBandScaleConfig","isPointScaleConfig","getColorScale","getOrdinalColorScale","getTickNumber","getScale","zoomScaleRange","getAxisExtremum","getRange","drawingArea","axisDirection","isReverse","range","left","width","top","height","reverse","isDateData","data","Date","createDateFormatter","axis","timeScale","v","location","tickFormat","tickNumber","toLocaleString","DEFAULT_CATEGORY_GAP_RATIO","DEFAULT_BAR_GAP_RATIO","computeValue","formattedSeries","allAxis","extremumGetters","zoomData","zoomOptions","getFilters","completeAxis","forEach","eachAxis","axisIndex","isDefaultAxis","zoomOption","id","zoom","find","axisId","zoomRange","start","end","minData","maxData","undefined","categoryGapRatio","barGapRatio","scaleRange","zoomedRange","scale","paddingInner","paddingOuter","length","colorScale","colorMap","type","values","dateFormatter","valueFormatter","scaleType","axisExtremums","min","max","rawTickNumber","domain","nice","minDomain","maxDomain","axisIds","map"],"sources":["/Users/federico/Coding/React/ITValuePartner/app/node_modules/@mui/x-charts/esm/context/CartesianProvider/computeValue.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { scaleBand, scalePoint, scaleTime } from '@mui/x-charts-vendor/d3-scale';\nimport { isBandScaleConfig, isPointScaleConfig } from '../../models/axis';\nimport { getColorScale, getOrdinalColorScale } from '../../internals/colorScale';\nimport { getTickNumber } from '../../hooks/useTicks';\nimport { getScale } from '../../internals/getScale';\nimport { zoomScaleRange } from './zoom';\nimport { getAxisExtremum } from './getAxisExtremum';\nconst getRange = (drawingArea, axisDirection, isReverse) => {\n  const range = axisDirection === 'x' ? [drawingArea.left, drawingArea.left + drawingArea.width] : [drawingArea.top + drawingArea.height, drawingArea.top];\n  return isReverse ? range.reverse() : range;\n};\nconst isDateData = data => data?.[0] instanceof Date;\nfunction createDateFormatter(axis, range) {\n  const timeScale = scaleTime(axis.data, range);\n  return (v, {\n    location\n  }) => location === 'tick' ? timeScale.tickFormat(axis.tickNumber)(v) : `${v.toLocaleString()}`;\n}\nconst DEFAULT_CATEGORY_GAP_RATIO = 0.2;\nconst DEFAULT_BAR_GAP_RATIO = 0.1;\nexport function computeValue({\n  drawingArea,\n  formattedSeries,\n  axis: allAxis,\n  extremumGetters,\n  axisDirection,\n  zoomData,\n  zoomOptions,\n  getFilters\n}) {\n  const completeAxis = {};\n  allAxis.forEach((eachAxis, axisIndex) => {\n    const axis = eachAxis;\n    const isDefaultAxis = axisIndex === 0;\n    const zoomOption = zoomOptions?.[axis.id];\n    const zoom = zoomData?.find(({\n      axisId\n    }) => axisId === axis.id);\n    const zoomRange = zoom ? [zoom.start, zoom.end] : [0, 100];\n    const range = getRange(drawingArea, axisDirection, axis.reverse);\n    const [minData, maxData] = getAxisExtremum(axis, extremumGetters, isDefaultAxis, formattedSeries, zoom === undefined && !zoomOption ? getFilters : undefined // Do not apply filtering if zoom is already defined.\n    );\n    const data = axis.data ?? [];\n    if (isBandScaleConfig(axis)) {\n      const categoryGapRatio = axis.categoryGapRatio ?? DEFAULT_CATEGORY_GAP_RATIO;\n      const barGapRatio = axis.barGapRatio ?? DEFAULT_BAR_GAP_RATIO;\n      // Reverse range because ordinal scales are presented from top to bottom on y-axis\n      const scaleRange = axisDirection === 'x' ? range : [range[1], range[0]];\n      const zoomedRange = zoomScaleRange(scaleRange, zoomRange);\n      completeAxis[axis.id] = _extends({\n        categoryGapRatio,\n        barGapRatio\n      }, axis, {\n        data,\n        scale: scaleBand(axis.data, zoomedRange).paddingInner(categoryGapRatio).paddingOuter(categoryGapRatio / 2),\n        tickNumber: axis.data.length,\n        colorScale: axis.colorMap && (axis.colorMap.type === 'ordinal' ? getOrdinalColorScale(_extends({\n          values: axis.data\n        }, axis.colorMap)) : getColorScale(axis.colorMap))\n      });\n      if (isDateData(axis.data)) {\n        const dateFormatter = createDateFormatter(axis, scaleRange);\n        completeAxis[axis.id].valueFormatter = axis.valueFormatter ?? dateFormatter;\n      }\n    }\n    if (isPointScaleConfig(axis)) {\n      const scaleRange = axisDirection === 'x' ? range : [...range].reverse();\n      const zoomedRange = zoomScaleRange(scaleRange, zoomRange);\n      completeAxis[axis.id] = _extends({}, axis, {\n        data,\n        scale: scalePoint(axis.data, zoomedRange),\n        tickNumber: axis.data.length,\n        colorScale: axis.colorMap && (axis.colorMap.type === 'ordinal' ? getOrdinalColorScale(_extends({\n          values: axis.data\n        }, axis.colorMap)) : getColorScale(axis.colorMap))\n      });\n      if (isDateData(axis.data)) {\n        const dateFormatter = createDateFormatter(axis, scaleRange);\n        completeAxis[axis.id].valueFormatter = axis.valueFormatter ?? dateFormatter;\n      }\n    }\n    if (axis.scaleType === 'band' || axis.scaleType === 'point') {\n      // Could be merged with the two previous \"if conditions\" but then TS does not get that `axis.scaleType` can't be `band` or `point`.\n      return;\n    }\n    const scaleType = axis.scaleType ?? 'linear';\n    const axisExtremums = [axis.min ?? minData, axis.max ?? maxData];\n    const rawTickNumber = getTickNumber(_extends({}, axis, {\n      range,\n      domain: axisExtremums\n    }));\n    const tickNumber = rawTickNumber / ((zoomRange[1] - zoomRange[0]) / 100);\n    const zoomedRange = zoomScaleRange(range, zoomRange);\n\n    // TODO: move nice to prop? Disable when there is zoom?\n    const scale = getScale(scaleType, axisExtremums, zoomedRange).nice(rawTickNumber);\n    const [minDomain, maxDomain] = scale.domain();\n    const domain = [axis.min ?? minDomain, axis.max ?? maxDomain];\n    completeAxis[axis.id] = _extends({}, axis, {\n      data,\n      scaleType: scaleType,\n      scale: scale.domain(domain),\n      tickNumber,\n      colorScale: axis.colorMap && getColorScale(axis.colorMap)\n    });\n  });\n  return {\n    axis: completeAxis,\n    axisIds: allAxis.map(({\n      id\n    }) => id)\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}