{"ast":null,"code":"var _jsxFileName = \"/Users/federico/Coding/React/ITValuePartner/app/src/components/Stats/DeepStats/PaymentChannel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { PieChart } from \"@mui/x-charts/PieChart\";\nimport { Switch, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst series = [{\n  id: 0,\n  value: 10,\n  label: \"series A\"\n}, {\n  id: 1,\n  value: 15,\n  label: \"series B\"\n}, {\n  id: 2,\n  value: 20,\n  label: \"series C\"\n}];\nconst PaymentChannel = ({\n  account,\n  selectedAccount\n}) => {\n  _s();\n  const [divisa, setDivisa] = useState(false); //true => USD; false => EUR\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center\",\n      children: [console.log('account[selectedAccount].securitiesBalance[\"EUR\"]', account[selectedAccount].paymentChannel[divisa ? \"USD\" : \"EUR\"]), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"EUR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        onChange: () => setDivisa(!divisa),\n        value: divisa\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"USD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n      series: [{\n        data: series\n      }],\n      width: 400,\n      height: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentChannel, \"BByL5Z5e/kBjCj2xNj6wSBX+Fq8=\");\n_c = PaymentChannel;\nexport default PaymentChannel;\nvar _c;\n$RefreshReg$(_c, \"PaymentChannel\");","map":{"version":3,"names":["React","useState","PieChart","Switch","Typography","jsxDEV","_jsxDEV","series","id","value","label","PaymentChannel","account","selectedAccount","_s","divisa","setDivisa","className","children","console","log","paymentChannel","fileName","_jsxFileName","lineNumber","columnNumber","onChange","data","width","height","_c","$RefreshReg$"],"sources":["/Users/federico/Coding/React/ITValuePartner/app/src/components/Stats/DeepStats/PaymentChannel.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { PieChart } from \"@mui/x-charts/PieChart\";\nimport { Switch, Typography } from \"@mui/material\";\n\nconst series = [\n  { id: 0, value: 10, label: \"series A\" },\n  { id: 1, value: 15, label: \"series B\" },\n  { id: 2, value: 20, label: \"series C\" },\n];\nconst PaymentChannel = ({ account, selectedAccount }) => {\n  const [divisa, setDivisa] = useState(false); //true => USD; false => EUR\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <div className=\"flex items-center\">\n        {console.log(\n          'account[selectedAccount].securitiesBalance[\"EUR\"]',\n          account[selectedAccount].paymentChannel[divisa ? \"USD\" : \"EUR\"]\n        )}\n        <Typography>EUR</Typography>\n        <Switch onChange={() => setDivisa(!divisa)} value={divisa} />\n        <Typography>USD</Typography>\n      </div>\n      <PieChart\n        series={[\n          {\n            data: series,\n          },\n        ]}\n        width={400}\n        height={200}\n      />\n    </div>\n  );\n};\n\nexport default PaymentChannel;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAG,CACb;EAAEC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,EAAE;EAAEC,KAAK,EAAE;AAAW,CAAC,EACvC;EAAEF,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,EAAE;EAAEC,KAAK,EAAE;AAAW,CAAC,EACvC;EAAEF,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,EAAE;EAAEC,KAAK,EAAE;AAAW,CAAC,CACxC;AACD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE7C,oBACEK,OAAA;IAAKW,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBACzCZ,OAAA;MAAKW,SAAS,EAAC,mBAAmB;MAAAC,QAAA,GAC/BC,OAAO,CAACC,GAAG,CACV,mDAAmD,EACnDR,OAAO,CAACC,eAAe,CAAC,CAACQ,cAAc,CAACN,MAAM,GAAG,KAAK,GAAG,KAAK,CAChE,CAAC,eACDT,OAAA,CAACF,UAAU;QAAAc,QAAA,EAAC;MAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC5BnB,OAAA,CAACH,MAAM;QAACuB,QAAQ,EAAEA,CAAA,KAAMV,SAAS,CAAC,CAACD,MAAM,CAAE;QAACN,KAAK,EAAEM;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7DnB,OAAA,CAACF,UAAU;QAAAc,QAAA,EAAC;MAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACNnB,OAAA,CAACJ,QAAQ;MACPK,MAAM,EAAE,CACN;QACEoB,IAAI,EAAEpB;MACR,CAAC,CACD;MACFqB,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACX,EAAA,CAzBIH,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AA2BpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}